name: Build & Scan Docker Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  USER: ${{ github.actor }}
  IMAGE_NAME: dynamic-risk-analyzer

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      # 1) Repo auschecken
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Buildx & QEMU f√ºr Multi-Arch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3) Login in GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 4) Erstes Image bauen & pushen
      - name: Build & push base image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: scanner/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.USER }}/${{ env.IMAGE_NAME }}:latest

      # 5) Trivy-Scan
      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@v0.9.2
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.USER }}/${{ env.IMAGE_NAME }}:latest
          format: json
          output: trivy_output.json

      # 6) Zweites Image mit Scan-Report bauen & pushen
      - name: Build & push image with Trivy report
        run: |
          docker build \
            -f scanner/Dockerfile.trivy-analysis \
            -t ${{ env.REGISTRY }}/${{ env.USER }}/${{ env.IMAGE_NAME }}-with-trivy-output:latest \
            .
          docker push ${{ env.REGISTRY }}/${{ env.USER }}/${{ env.IMAGE_NAME }}-with-trivy-output:latest

      # 7) Optional: Login & Push zu Docker Hub
      - name: Log in to Docker Hub
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        if: ${{ always() && secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        run: |
          docker tag \
            ${{ env.REGISTRY }}/${{ env.USER }}/${{ env.IMAGE_NAME }}:latest \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
